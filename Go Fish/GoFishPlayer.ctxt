#BlueJ class context
comment0.target=GoFishPlayer
comment0.text=\r\n\ This\ class\ represents\ a\ player\ in\ the\ game\ of\r\n\ Go\ Fish.\ \ Note\:\ \ Follow\ the\ rules\ as\ noted\r\n\ in\ the\ method\ headings\ and\ in\ the\ GoFish\r\n\ class.\r\n\ \r\n\ \r\n\ @Randeep\ Singh,\ Emma\ Phillips,\ Eric\ Mannato\ \r\n\ @Project\ 1\ \r\n
comment1.params=deck\ name
comment1.target=GoFishPlayer(Deck,\ java.lang.String)
comment1.text=\r\n\ Constructs\ a\ new\ GoFishPlayer\ of\ the\ input\ name\ and\r\n\ playing\ the\ game\ with\ the\ input\ deck.\ \ The\ player\r\n\ should\ have\ a\ full\ hand\ once\ constructed.\r\n\ \r\n\ @param\ deck\ The\ deck\ the\ game\ is\ being\ played\ with.\r\n\ @param\ name\ The\ name\ of\ the\ player.\r\n
comment10.params=
comment10.target=Card\ selectCard()
comment10.text=\r\n\ Ensures\ the\ player\ has\ a\ full\ hand\ (as\ long\ as\ there\ are\r\n\ cards\ in\ the\ deck\ to\ make\ a\ full\ hand).\ \ Then,\ returns\r\n\ a\ random\ card\ from\ the\ player's\ hand\ without\ removing\ it\r\n\ from\ the\ player's\ hand.\ \ If\ the\ player\r\n\ has\ no\ cards,\ returns\ null.\r\n\ \r\n\ @return\ A\ random\ card\ from\ the\ player's\ hand\ (without\ \r\n\ removing\ it)\ and\ null\ if\ the\ player\ has\ no\ cards.\r\n
comment11.params=rank
comment11.target=Card\ giveCard(int)
comment11.text=\r\n\ If\ the\ player\ has\ a\ card\ if\ the\ input\ rank,\ returns\ the\ card,\ \r\n\ removing\ it\ from\ the\ player's\ hand.\ \ Otherwise,\ returns\ null.\r\n\ \r\n\ @param\ rank\ The\ rank\ of\ the\ requested\ card.\r\n\ @return\ A\ card\ matching\ the\ same\ rank\ as\ the\ input\ rank\r\n\ and\ null\ if\ no\ such\ card\ exists.\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Returns\ a\ comma\ separated\ list\ of\ the\ cards\ in\ the\ player's\ hand.\r\n\ \r\n\ @return\ A\ comma\ separated\ list\ of\ the\ cards\ in\ the\ player's\ hand.\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Returns\ the\ name\ of\ the\ player.\r\n\ \r\n\ @return\ The\ name\ of\ the\ player.\r\n
comment3.params=
comment3.target=int\ getPairCount()
comment3.text=\r\n\ Returns\ the\ number\ of\ pairs\ in\ the\ player\r\n\ has\ discarded.\r\n\ \r\n\ @return\ The\ number\ of\ pairs\ the\ player\ has\r\n\ discarded.\r\n
comment4.params=
comment4.target=java.lang.String\ getPairs()
comment4.text=\r\n\ Returns\ a\ comma\ separated\ list\ of\ pairs\ the\r\n\ player\ has\ discarded.\r\n\ \r\n\ @return\ A\ comma\ separated\ list\ of\ pairs\ the\r\n\ player\ has\ discarded.\r\n
comment5.params=
comment5.target=void\ discardPairs()
comment5.text=\r\n\ \ Removes\ any\ pairs\ from\ the\ player's\ hand\ and\ puts\r\n\ \ them\ in\ the\ player's\ discarded\ pairs.\r\n
comment6.params=
comment6.target=void\ makeFullHand()
comment6.text=\r\n\ Draws\ cards\ from\ the\ deck,\ discarding\ pairs,\ until\ the\r\n\ player\ has\ MAX_CARDS\ in\ their\ hand\ or\ there\ are\ no\r\n\ more\ cards\ left\ in\ the\ deck.\r\n
comment7.params=card
comment7.target=void\ addCard(Card)
comment7.text=\r\n\ Adds\ the\ input\ card\ to\ the\ player's\ hand,\ \r\n\ discarding\ any\ pairs.\ \ If\ the\ player\ discards\r\n\ all\ cards\ in\ their\ hand,\ draws\ another\ full\ hand.\r\n\ \r\n\ @param\ card\ The\ card\ to\ add\ the\ the\ player's\ hand.\r\n
comment8.params=
comment8.target=void\ addCard()
comment8.text=\r\n\ If\ there\ is\ still\ at\ least\ one\ card\ remaining\ in\r\n\ the\ deck,\ adds\ a\ card\ from\ the\ deck\ to\ the\ player's\r\n\ hand,\ discarding\ any\ pairs.\ \ If\ the\ player\ discards\r\n\ all\ cards\ in\ their\ hand,\ draws\ another\ full\ hand.\r\n
comment9.params=
comment9.target=int\ cardsInHand()
comment9.text=\r\n\ Returns\ the\ number\ of\ cards\ in\ the\ player's\ hand.\r\n\ \r\n\ @return\ The\ number\ of\ cards\ in\ the\ player's\ hand.\r\n
numComments=13
